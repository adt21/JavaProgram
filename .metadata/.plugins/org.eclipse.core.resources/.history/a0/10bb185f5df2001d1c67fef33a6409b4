package binaryTrees;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class LevelWiseOrder {
	
	public static BinaryTreeNode<Integer> levelWiseTakeInput(){
		Scanner s = new Scanner(System.in);
		int rootData = s.nextInt();
		if(rootData == -1) {
			return null;
		}
		BinaryTreeNode<Integer> root = new BinaryTreeNode<Integer>(rootData);
		Queue<BinaryTreeNode<Integer>> pendingChildren = new LinkedList<BinaryTreeNode<Integer>>(); //here inside type of queue we insert a node because we have to connect it with it's left child as well as it's right child but if we enter integer data only then we can't create connection between root and it's left child	}
		
	
	}
	public static void main(String[] args) {
		
	}

}
